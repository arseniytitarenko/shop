services:
  order-service:
    build: ./order-service
    dns:
      - 8.8.8.8
    depends_on:
      - order-db
      - rabbitmq
    environment:
      - DB_HOST=order-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=order
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    restart: always
    networks:
      - backend

  order-db:
    image: postgres:15
    environment:
      POSTGRES_DB: order
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - backend

  payment-service:
    build: ./payment-service
    dns:
      - 8.8.8.8
    depends_on:
      - payment-db
      - rabbitmq
    environment:
      - DB_HOST=payment-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=payment
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    restart: always
    networks:
      - backend

  payment-db:
    image: postgres:15
    environment:
      POSTGRES_DB: payment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - payment-db-data:/var/lib/postgresql/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    restart: always
    networks:
      - backend

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - order-service
      - payment-service
    networks:
      - backend

volumes:
  order-db-data:
  payment-db-data:

networks:
  backend: